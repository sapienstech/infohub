/////////////////////////////////////////////////////////////////////////
// Utils - Auto generated file (contains all LU functions and Globals)
/////////////////////////////////////////////////////////////////////////
    
package com.k2view.cdbms.#luName#;

import java.util.*;
import java.sql.*;
import java.math.*;
import java.io.*;
import com.k2view.cdbms.shared.*;
import com.k2view.cdbms.sync.*;
import com.k2view.cdbms.lut.*;
import com.k2view.cdbms.shared.logging.LogEntry.*;
import com.k2view.cdbms.func.oracle.OracleToDate;
import com.k2view.cdbms.func.oracle.OracleRownum;
import javax.xml.bind.Unmarshaller;
import com.google.common.base.CaseFormat;
import com.google.common.collect.Multimap;
import java.util.stream.Collectors;
import javax.xml.bind.*;
import javax.xml.namespace.*;
import javax.xml.parsers.*;
import javax.xml.transform.stream.*;
import javax.xml.xpath.*;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.*;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;
import com.sapiens.des.engine.model.FlowResult;
import com.sapiens.des.engine.model.IoFactType;
import com.sapiens.des.engine.model.IoGroup;
import com.sapiens.des.engine.model.IoGroupInstance;
import com.sapiens.des.engine.model.KeyValue;
import com.sapiens.des.execution.model.ExecutionInput;
import java.time.format.DateTimeFormatter;
import java.time.temporal.TemporalAccessor;
import com.google.common.base.*;
import com.google.common.collect.Sets;
import org.apache.commons.lang3.StringUtils;

public class Utils extends UserUtils {

    public Utils(LUType luType,ExecutionContext context) throws ClassNotFoundException, SQLException {
        super(luType,context);
       LUDBBase ludb = getLudb();
       if(ludb != null) {
           if(ludb.getConnection() != null) {
               initSqliteUDFs(ludb.getConnection());
           }
       }        
    }
    
    ////////////////////////////////////////////
    // Register as LUDB functions (Sqlite UDFs)
    ////////////////////////////////////////////
    public void initSqliteUDFs(Connection conn) 
        throws ClassNotFoundException, SQLException
    {
        Class.forName("org.sqlite.JDBC");

        #methodsSqliteUDF#
        #each#
        org.sqlite.Function.create(conn, "!NAME!", new org.sqlite.Function() {
            protected void xFunc() throws SQLException {
                try {
                    result((!RETRUN_TYPE!)!NAME!(!ARGS!));
                } catch (SQLException e) {
                    throw e;
                } catch (Exception e) {
                    throw new RuntimeException(e.toString());
                }
            }
        });

        #end#
    }
    


    #methods#
    #each#
    /* !COMMENT! */
    public !RETRUN_TYPE! !NAME!(!ARGS!) throws Exception {
!BODY!
    }
    #end#


    #globals#
    #each#
    /* !COMMENT! */
    public static final String !NAME! = "!VALUE!";
    #end#
}